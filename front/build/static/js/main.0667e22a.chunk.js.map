{"version":3,"sources":["containers/Profile/mystery-avatar.jpg","containers/SignUp/SignUp.js","containers/SignIn/SignIn.js","containers/Profile/Profile.js","hoc/requireAuth.js","hoc/requireNotAuth.js","App.js","serviceWorker.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["module","exports","SignUp","props","handleClose","reason","setState","open","state","email","password","firstName","lastName","flash","updateEmailField","bind","updatePasswordField","updateFirstNameField","updateLastNameField","submitForm","event","this","target","value","e","preventDefault","fetch","method","headers","Headers","body","JSON","stringify","then","res","json","err","console","log","className","onSubmit","placeholder","onChange","type","name","to","Snackbar","style","autoHideDuration","onClose","Alert","severity","variant","React","Component","SignIn","handleSubmit","ok","Error","message","dispatch","user","token","history","replace","catch","connect","auth","Profile","profile","lastname","statusText","class","id","alt","src","Avatar","ComposedComponent","Authentication","authenticated","push","NotAuthentication","App","Grid","container","alignItems","height","item","xs","Paper","elevation","margin","justify","sm","alignContent","exact","from","path","component","requireNotAuth","requireAuth","Boolean","window","location","hostname","match","allReducers","combineReducers","action","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0667e22a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mystery-avatar.82e8df0a.jpg\";","import React from 'react';\nimport './SignUp.css';\nimport { Snackbar } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport {Link} from 'react-router-dom';\n\n\nclass SignUp extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"mon@email.com\",\n      password: \"monPassw0rd\",\n      firstName: \"James\",\n      lastName: \"Bond\",\n\n      // email: \"\",\n      // password: \"\",\n      // firstName: \"\",\n      // lastName: \"\"\n      flash: '',\n      open: false\n    };\n\n\n    this.updateEmailField = this.updateEmailField.bind(this);\n    this.updatePasswordField = this.updatePasswordField.bind(this);\n    this.updateFirstNameField = this.updateFirstNameField.bind(this);\n    this.updateLastNameField = this.updateLastNameField.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n\n  updateEmailField(event) {\n    this.setState({ email: event.target.value });\n  }\n\n  updatePasswordField(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  updateFirstNameField(event) {\n    this.setState({ firstName: event.target.value });\n  }\n\n  updateLastNameField(event) {\n    this.setState({ lastName: event.target.value });\n  }\n\n\n  submitForm(e) {\n    e.preventDefault();\n    // JSON.stringify(this.state,1,1)\n    // console.log(JSON.stringify(this.state,1,1))\n    fetch(\"/auth/signup\",\n      {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        }),\n        body: JSON.stringify(this.state),\n      })\n      .then(res => res.json())\n      .then(\n        res => this.setState({ \"flash\": res.flash, open: true }),\n        err => this.setState({ \"flash\": err.flash, open: true })\n      )\n  }\n\n  handleClose = (reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ open: false });\n  };\n\n\n\n  render() {\n    console.log(\"flash: \" + this.state.flash)\n    return (\n      <div>\n        <h1 className='title'>{this.state.lastName === '' ? 'SignUp' : 'Hello, ' + this.state.lastName}</h1>\n        {/* <h1 className='dsp'> Hello, {this.state.lastName}</h1> */}\n        <form className='formfields' onSubmit={this.submitForm}>\n\n          <input className='textfields' value={this.state.email} placeholder=\"E-mail\" onChange={this.updateEmailField} type=\"email\" name=\"email\" />\n          <input className='textfields' value={this.state.password} placeholder=\"Password\" onChange={this.updatePasswordField} type=\"password\" name=\"password\" />\n          <input className='textfields' value={this.state.password} placeholder=\"Confirm Password\" onChange={this.updatePasswordField} type=\"password\" name=\"password\" />\n          <input className='textfields' value={this.state.firstName} placeholder=\"First Name\" onChange={this.updateFirstNameField} type=\"firstName\" name=\"firstName\" />\n          <input className='textfields' value={this.state.lastName} placeholder=\"Last Name\" onChange={this.updateLastNameField} type=\"lastName\" name=\"lastName\" />\n          <input className='btn' type=\"submit\" value=\"Sign Up\" />\n          <br></br>\n          <h5>If you already have an account please <Link to=\"/SignIn\">Sign In</Link></h5>\n\n          <Snackbar style={{ 'top': '-27rem' }} open={this.state.open} autoHideDuration={3000} onClose={this.handleClose}>\n\n            <Alert onClose={this.handleClose} severity={this.state.flash === 'User has been signed up!' ? \"success\" : \"error\"} variant=\"filled\">\n              {this.state.flash}\n            </Alert>\n\n          </Snackbar>\n\n        </form>\n\n      </div>\n    )\n  }\n}\n\nexport default SignUp;","import React from 'react';\nimport './SignIn.css';\nimport { Link } from \"react-router-dom\";\nimport { Snackbar} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { connect } from  'react-redux';\n\nclass SignIn extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"mon@email.com\",\n            password: \"monPassw0rd\",\n            open: false\n        }\n        this.updateEmailField = this.updateEmailField.bind(this);\n        this.updatePasswordField = this.updatePasswordField.bind(this);\n    }\n\n    updateEmailField(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    updatePasswordField(event) {\n        this.setState({ password: event.target.value });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        fetch(\"/auth/signin\",\n            {\n                method: 'POST',\n                headers: new Headers({\n                    'Content-Type': 'application/json'\n                }),\n                body: JSON.stringify(this.state),\n            })\n            .then(res => {\n                if (res.ok)\n                    return res.json()\n                else\n                    // throw new Error(res.statusText);\n                    throw new Error('Email not found!');\n            })\n            .then(res => {\n                this.setState({ \"flash\": res.message, open: true })\n                this.props.dispatch(\n                    {\n                        type : \"CREATE_SESSION\",\n                        user: res.user,\n                        token : res.token,\n                        message : res.message\n                    }\n                )\n                this.props.history.replace(\"/\")\n    })\n            .catch(err => this.setState({ \"flash\": err.message, open: true }))\n    }\n\n    handleClose = (reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n        this.setState({ open: false });\n    };\n\n    \n\n\n    render() {\n        return (\n            <div>\n\n                <form className='formfields' onSubmit={this.handleSubmit}>\n\n                    <input className='textfields' value={this.state.email} placeholder=\"E-mail\" onChange={this.updateEmailField} type=\"email\" name=\"email\" />\n                    <input className='textfields' value={this.state.password} placeholder=\"Password\" onChange={this.updatePasswordField} type=\"password\" name=\"password\" />\n                    <input className='btn' type=\"submit\" value=\"Sign In\" />\n                    <br></br>\n                    <h5>Press <Link to=\"/SignUp\">here</Link> to register!</h5>\n\n                    <Snackbar style={{ 'top': '-27rem' }} open={this.state.open} autoHideDuration={3000} onClose={this.handleClose}>\n                        <Alert onClose={this.handleClose} severity={this.state.flash === 'Sign in succesful!' ? \"success\" : \"error\"} variant=\"filled\">\n                            {this.state.flash}\n                        </Alert>\n                    </Snackbar>\n\n\n                </form>\n\n            </div>\n        )\n    }\n}\n\nfunction  mapStateToProps(state) {\n    return {\n        flash:  state.auth.token,\n    }\n};  \n\nexport  default  connect(mapStateToProps)(SignIn);\n\n","import React from 'react';\nimport './Profile.css';\nimport { Link } from 'react-router-dom';\nimport Avatar from './mystery-avatar.jpg'\n\nclass Profile extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\tprofile:{\n\t\t\temail: \"homer.simpson@wildcodeschool.fr\",\n\t\t\tname: \"Homer\",\n\t\t\tlastname: \"Simpson\"\n\t\t}\n\t}\n}\n\n\tcomponentDidMount() {\n\t\tif (this.props.token){\n\t\tfetch('/profile',\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': 'Bearer ' + this.props.token,\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (res.ok)\n\t\t\t\t\treturn res.json()\n\t\t\t\telse\n\t\t\t\t\tthrow new Error(res.statusText)\n\t\t\t})\n\t\t\t.then(res => { this.setState({ profile: res }) })\n\t\t\t.catch()\n\t}\t\n}\n\t\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div class=\"image-crop\">\n\t\t\t\t\t<img id=\"avatar\" alt='avatar' src={Avatar}></img>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"bio\">\n\t\t\t\t\t<h2>{this.state.profile.name + ' ' + this.state.profile.lastname}</h2>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"bio\">\n\t\t\t\t\t<h4>{this.state.email}</h4>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"buttons\">\n\t\t\t\t\t<Link className='link' to=\"/SignIn\"><button>Sign out</button></Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Profile;","import  React, { Component } from  'react';\nimport { connect } from  'react-redux';\n// import { browserHistory } from  'react-router';\n\nexport  default  function (ComposedComponent) {\n    class  Authentication  extends  Component {\n        componentWillMount() {\n            if (!this.props.authenticated)\n                this.props.history.push('/signin');\n        }\n        componentWillUpdate() {\n            if (!this.props.authenticated)\n                this.props.history.push('/signin');\n        }\n        render() {\n            return  <ComposedComponent  {...this.props}  />\n        }\n    }\n\n    function  mapStateToProps(state) {\n        return { authenticated:  state.auth.token?true:false };\n    }\n\n    return  connect(mapStateToProps)(Authentication);\n}","import  React, { Component } from  'react';\nimport { connect } from  'react-redux';\n// import { browserHistory } from  'react-router';\n\nexport  default  function (ComposedComponent) {\n    class  NotAuthentication  extends  Component {\n        componentWillMount() {\n            if (this.props.authenticated)\n                this.props.history.push('/Profile');\n        }\n        componentWillUpdate() {\n            if (this.props.authenticated)\n                this.props.history.push('/Profile');\n        }\n        render() {\n            return  <ComposedComponent  {...this.props}  />\n        }\n    }\n\n    function  mapStateToProps(state) {\n        return { authenticated:  state.auth.token?true:false };\n    }\n\n    return  connect(mapStateToProps)(NotAuthentication);\n}","import React from 'react';\nimport './App.css';\nimport SignUp from './containers/SignUp/SignUp';\nimport SignIn from './containers/SignIn/SignIn';\nimport Profile from './containers/Profile/Profile';\n\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { Grid, Paper } from '@material-ui/core';\n// import { Snackbar } from '@material-ui/core';\n// import { Alert } from '@material-ui/lab';\n\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport requireAuth from './hoc/requireAuth'\nimport requireNotAuth from './hoc/requireNotAuth'\n\n\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MuiThemeProvider  >\n          <Grid container alignItems='center' style={{ height: '100%' }}>\n            <Grid item xs={12} >\n              <Paper elevation={4} style={{ margin: 32 }}>\n                <Grid container alignItems='center' justify='center' >\n\n                  <Grid item xs={12} sm={6} style={{ 'text-align': 'center' }}>\n                    <img alt='img' src=\"http://images.innoveduc.fr/react_odyssey_homer/wildhomer.png\" />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6} alignContent='center' style={{ 'text-align': 'center' }}  >\n                    <BrowserRouter>\n                      <Switch>\n                        <Redirect exact from='/' to='/profile' />\n                        <Route path='/SignIn' component={requireNotAuth(SignIn)} />\n                        <Route path='/SignUp' component={requireNotAuth(SignUp)} />\n                        <Route path='/Profile' component={requireAuth(Profile)} />\n                      </Switch>\n                    </BrowserRouter>\n                  </Grid>\n\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        </MuiThemeProvider>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from  'redux'\nimport  authReducer  from  './authReducer'\n\nconst  allReducers  =  combineReducers({\n    auth:  authReducer,\n});\nexport  default  allReducers;","export  default  function (state  = {}, action) {\n    switch (action.type) {\n        case  \"CREATE_SESSION\":\n            return { ...state, token:  action.token}\n        default:\n            return  state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport allReducers from './reducers/index';\n\n\nconst store = createStore(allReducers)\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}